//----------------------------------------------------------
//
// Gestion barre à leds multicolore
//
// Test ok 27/12/16
// Version V1.0
//
// 28/01/01/16 => Plilotage 180 led ou 3 metres
// 1 metre/6 led = 3.5A
// 192.168.4.1
// Port serie 115.200
//
// LED_COUNT =  180 led
//
// P.Rondane/B.Bouchardon
// Compilateur version 1.6.10
//----------------------------------------------------------


#include <WS2812FX.h>
#include <WiFiClient.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char *ssid = "Led_RGB";
const char *password = "Tours2016";

ESP8266WebServer server(80);

//chaine de caractère contenant la page HTML
String web_page = "";

//Nombre de WS2812
//#define LED_COUNT 78
#define LED_COUNT 180
// Pin sortie données
#define LED_PIN 2

//Instanciation de l'objet représentant le ruban
WS2812FX ws2812fx = WS2812FX(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

unsigned long previousMillis = 0;
const long interval = 10000;

//flag pour le choix d'effet
bool modeDemo = true;

String rootPage = "<HTML>\n<HEAD>" \
                  "</HEAD><BODY>" \
                  "<h1>Commande guirlande RGB V1.0</h1>" \
                  " <p>" \
                  " <h2>Choix de la luminosite</h2>" \
                  " <form action=\"/led\" method=get>" \
                  "     <select name=\"Lum\">" \
                  "         <option value=\"0\">0%</option>" \
                  "         <option selected value=\"64\">25%</option>" \
                  "         <option value=\"127\">50%</option>" \
                  "         <option value=\"191\">75%</option>" \
                  "         <option value=\"255\">100%</option>" \
                  "     </select>" \
                  " </p>" \
                  " <p>" \
                  " <h2>Choix de l'effet (100 = demo, max = 44)</h2>" \
                  " <input type=\"number\" name=\"effet\" maxlength=\"3\" size=\"6\" /><br />" \
                  " </p>" \
                  "<br><input type=\"submit\" value=\"Envoi\" /></form>" \
                  "</BODY></HTML>";

// Prototype
void handleRoot(void);

void set_led_animation(int animID)
{
  Serial.print("Animation name: ");
  Serial.println(ws2812fx.getModeName(animID));
  ws2812fx.setMode(animID);
}

// fonction des parametres de la page web HTML
void parametres()
{
  // As-t-on tous les arguments ? - Is argument missing ?
  if (!server.hasArg("Lum") || !server.hasArg("effet"))
  {
    // Renvoi de la page HTML d'erreur - Referencing HTML
    server.send(200, "text/html", "An argument is missing");

    return;
  }
  //recuperation des arguments = parametres
  int lum = server.arg("Lum").toInt();
  int effet = server.arg("effet").toInt();

  //parametre de luminosite
  ws2812fx.setBrightness(lum);
  Serial.print("WEB - Lum = ");
  Serial.println(lum);

  //parametre de choix d'effet
  if (effet == 100)
  { //mode demo
    modeDemo = true;
    Serial.println("WEB - effet = demo");
  }
  else if (effet > ws2812fx.getModeCount())
  { //depassement nb effet
    Serial.print("WEB - error = mode ");
    Serial.println(ws2812fx.getModeCount());
  }
  else
  { // choix effet
    modeDemo = false;
    set_led_animation(effet);
  }

  //renvoi de la page HTML
  handleRoot();
}

//fonction page HTML
void handleRoot(void)
{
  server.send(200, "text/html", rootPage);
}

void srv_handle_not_found() 
{
  server.send(404, "text/plain", "File Not Found");
}

//Configuration
void setup()
{
  Serial.begin(115200);
  Serial.print("\n\n--- INIT ---\n");

  // Initialisation
  ws2812fx.init();
  //Luminosité sur 1/4 du maximun (255)
  ws2812fx.setBrightness(25);
  // Réglage de la vitesse des effets
  ws2812fx.setSpeed(500);
  //Un arc en cile glissant
  ws2812fx.setColor(255, 255, 0);
  ws2812fx.setMode(FX_MODE_CHASE_RAINBOW);
  // Demarrage
  ws2812fx.start();
  
  //Initialisation de la connexion wifi
  #ifdef WIFI_AS_AP
  WiFi.mode(WIFI_AP);
  boolean wifiResult = WiFi.softAP(ssid, password);
  if(wifiResult == true)
  {
    Serial.print("Serveur accessible: ");
    Serial.println(WiFi.softAPIP());
  }
  else
  {
    Serial.print("Wifi failed !");
  }
  #else
  WiFi.begin("Bbox-9D73DEEB", "F3436D1346ED55127A61FFF1DE15EE");  //Connect to the WiFi network
  while (WiFi.status() != WL_CONNECTED) {  //Wait for connection
    delay(500);
    Serial.println("Waiting to connect…");
  }
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  #endif

  //lancement de la page web
  server.on("/", handleRoot);
  server.on("/led", parametres);
  server.onNotFound(srv_handle_not_found);
  server.begin();
}

unsigned long currentMillis;
unsigned long tic;
unsigned long toc;

void loop()
{
  server.handleClient();

  //Rafraichissement de l'animation
  ws2812fx.service();

  currentMillis = millis();
  if (currentMillis - previousMillis >= interval)
  {
    previousMillis = currentMillis;
    Serial.printf("Device connected = %d\n", WiFi.softAPgetStationNum());

    if (modeDemo)
    {
      uint8_t effetSuivant = (ws2812fx.getMode() + 1) % ws2812fx.getModeCount();
      set_led_animation(effetSuivant);
    }
  }
}
